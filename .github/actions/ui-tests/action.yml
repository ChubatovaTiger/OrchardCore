# To be refactored, need to check how DRY can work in the end.
name: UI Tests
description: Runs UI tests and publishes the failure dumps as an artifact on test failure.

inputs:
  artifact-name-suffix:
    description: The name of the OS used for the runner (e.g. "ubuntu-latest").
    required: true

runs:
  using: "composite"
  steps:
    - name: UI Tests
      shell: bash
      run: |
        dotnet test -c Release --no-restore --no-build ./test/OrchardCore.Tests.UI/OrchardCore.Tests.UI.csproj
    - uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: ui-test-failure-${{ inputs.artifact-name-suffix }}
        path: |
          test/OrchardCore.Tests.UI/bin/Release/*/FailureDumps
        if-no-files-found: ignore
    - name: MVC UI Tests
      shell: bash
      run: |
        dotnet test -c Release --no-restore --no-build ./test/OrchardCore.Tests.UI.Mvc/OrchardCore.Tests.UI.Mvc.csproj
    - uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: mvc-ui-test-failure-${{ inputs.artifact-name-suffix}}
        path: |
          test/OrchardCore.Tests.UI.Mvc/bin/Release/*/FailureDumps
        if-no-files-found: ignore