name: PR - CI
on: 
  pull_request:
    branches: [ main, release/** ]
env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
jobs:
  build_test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    name: Build & Test
    steps:
    - uses: actions/checkout@v3
      name: Checkout source code
#    - name: Setup .NET 6.0
#      uses: actions/setup-dotnet@v3
#      with:
#        dotnet-version: 6.0.x
    # https://github.com/actions/cache/blob/main/workarounds.md#improving-cache-restore-performance-on-windowsusing-cross-os-caching
    - if: ${{ runner.os == 'Windows' }}
      name: Use GNU tar
      shell: cmd
      run: |
        echo "Adding GNU tar to PATH"
        echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"
    - uses: actions/cache@v3
      id: cache-nuget
      name: Cache NuGet packages and generated restore targets
      with:
         path: |
           ~/.nuget/packages
           **/obj/project.assets.json
           **/obj/project.nuget.cache
           **/*.csproj.nuget.g.targets
           **/packages.lock.json
         key: ${{ runner.os }}-nuget-${{ hashFiles('**/Dependencies*.props', '**/Directory.Packages.props') }}
         restore-keys: |
            ${{ runner.os }}-nuget-
    - name: Restore
      if: steps.cache-nugets.outputs.cache-hit != 'true'
      run: |
        dotnet restore --verbosity normal /p:DisableImplicitNuGetFallbackFolder=true /p:DisableImplicitLibraryPacksFolder
    - name: Build
      run: |
        dotnet build -c Release --no-restore --framework net6.0 /p:CreateHardLinksForCopyLocalIfPossible=true /p:CreateHardLinksForCopyFilesToOutputDirectoryIfPossible=true /p:CreateHardLinksForPublishFilesIfPossible=true
    - name: Unit Tests
      run: |
        dotnet test -c Release --no-restore --no-build  --framework net6.0 ./test/OrchardCore.Tests/OrchardCore.Tests.csproj
    - name: Functional Tests
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd test/OrchardCore.Tests.Functional
        npm install
        npm run cms:test
        npm run mvc:test
    - uses: actions/upload-artifact@v3
      if: matrix.os == 'ubuntu-latest' && failure()
      with:
        name: functional-test-failure
        path: |
          test/OrchardCore.Tests.Functional/cms-tests/cypress/screenshots
          src/OrchardCore.Cms.Web/App_Data/logs

