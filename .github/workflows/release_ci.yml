name: Release - CI
on:
  push:
    paths-ignore:
      - '**/*.md'
      - 'mkdocs.yml'
      - 'src/docs/**/*'
    branches:
      - 'skrypt/release-ci-test'
env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: Build, Test, Deploy
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core 3.1 on ${{ matrix.os }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.405
    - name: Setup .NET Core 5.0 on ${{ matrix.os }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.102
    - name: Build
      run: |
        dotnet build --configuration Release
    - name: Login to DockerHub
      if: matrix.os == 'ubuntu-latest'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Deploy preview docker image for linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        rm -rf ./src/OrchardCore.Cms.Web/App_Data
        rm -rf ./src/OrchardCore.Cms.Web/App_Data_Tests
        dotnet publish -c Release -o ./.build/release --no-build --no-restore --framework net5.0
        docker build -f Dockerfile-CI -t orchardproject/orchardcore-cms-linux:dev .
        docker push orchardproject/orchardcore-cms-linux:dev

