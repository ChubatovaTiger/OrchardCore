name: Build, Test and push
on: 
  pull_request:
    paths-ignore:
      - '**/*.md'
      - 'mkdocs.yml'
      - 'src/docs/**/*'
    branches:
      - dev
  push:
    paths-ignore:
      - '**/*.md'
      - 'mkdocs.yml'
      - 'src/docs/**/*'
    branches:
      - 'dev'
env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  BuildNumber: ${{ github.run_id }}
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        dotnet: ['3.1.404']
        os: [ubuntu-latest, windows-latest, macos-latest]
    name: Unit Tests
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core ${{ matrix.dotnet }} on ${{ matrix.os }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet }}
    - name: Build and test
      run: |
        dotnet build --configuration Release
        dotnet test -c Release --no-restore --no-build ./test/OrchardCore.Tests/OrchardCore.Tests.csproj
    - name: Pack
      if: matrix.os == 'ubuntu-latest' && github.ref == 'refs/heads/dev' 
      run: dotnet pack -c Release --no-restore --no-build --include-symbols
    - name: Upload Artifact
      if: matrix.os == 'ubuntu-latest' && github.ref == 'refs/heads/dev'  
      uses: actions/upload-artifact@v2
      with:
        name: nupkg
        path: ./src/**/*.nupkg
        retention-days: 5
  
  test_functional_mvc:
    name: Functional test - MVC
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node12.13.0-chrome78-ff70
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.404
    - name: Functional test
      run: |
        cd test/Functional
        npm install
        npm run mvc:test
    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: functional-mvc-screenshots
        path: test/Functional/mvc-tests/cypress/screenshots
        retention-days: 3
  
  test_functional_cms_sqlite:
    name: Functional test - CMS Sqlite
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node12.13.0-chrome78-ff70
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.404
    - name: Functional test
      run: |
        cd test/Functional
        npm install
        npm run cms:test
    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: functional-cms-sqlite-failure
        path: |
          test/Functional/cms-tests/cypress/screenshots
          src/OrchardCore.Cms.Web/App_Data/logs
        retention-days: 3
  
  test_functional_cms_postgresql:
    name: Functional test - CMS Postgres
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node12.13.0-chrome78-ff70
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: app
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      OrchardCore__ConnectionString: "User ID=postgres;Password=admin;Host=postgres;Port=5432;Database=app;"
      OrchardCore__DatabaseProvider: "Postgres"
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.404
    - name: Functional test
      run: |
        cd test/Functional
        npm install
        npm run cms:test
    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: functional-cms-postgresql-failure
        path: |
          test/Functional/cms-tests/cypress/screenshots
          src/OrchardCore.Cms.Web/App_Data/logs
        retention-days: 3
  
  test_functional_cms_mysql:
    name: Functional test - CMS Mysql
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node12.13.0-chrome78-ff70
    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: test123
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    env:
      OrchardCore__ConnectionString: "server=mariadb;uid=root;pwd=test123;database=test"
      OrchardCore__DatabaseProvider: "Mysql"
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.404
    - name: Functional test
      run: |
        cd test/Functional
        npm install
        npm run cms:test
    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: functional-cms-mysql-failure
        path: |
          test/Functional/cms-tests/cypress/screenshots
          src/OrchardCore.Cms.Web/App_Data/logs
        retention-days: 3

  test_functional_cms_mssql:
    name: Functional test - CMS SqlServer 2019
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node12.13.0-chrome78-ff70
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
          - 1433
        env:
          ACCEPT_EULA: Y
          MSSQL_SA_PASSWORD: Password12!
        options: --health-cmd="/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${{MSSQL_SA_PASSWORD}} -Q "SELECT 1" || exit 1" --health-interval=5s --health-timeout=2s --health-retries=3
    env:
      OrchardCore__ConnectionString: "Server=mssql;Database=tempdb;User Id=sa;Password=Password12!"
      OrchardCore__DatabaseProvider: "SqlConnection"
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.404
    - name: Functional test
      run: |
        cd test/Functional
        npm install
        npm run cms:test
    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: functional-cms-mssql-failure
        path: |
          test/Functional/cms-tests/cypress/screenshots
          src/OrchardCore.Cms.Web/App_Data/logs
        retention-days: 3
  
  test-npm-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Rebuild packages
      run: |
        npm install
        npm run rebuild
    - name: Check if git has changes
      id: changes
      uses: UnicornGlobal/has-changes-action@v1.0.11
    - name: Changes detected after building assets
      if: steps.changes.outputs.changed == 1
      run: | 
        git status
        echo "Please make sure to build them properly before pushing"
        exit -1
  
  deploy_cloudsmith:
    if: github.ref == 'refs/heads/dev'
    needs: [test,test_functional_mvc,test_functional_cms_sqlite,test_functional_cms_postgresql,test_functional_cms_mysql,test_functional_cms_mssql]
    runs-on: ubuntu-latest
    name: Deploy preview nuget packages
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: nupkg
    - name: Publish nuget
      run: dotnet nuget push './nupkg/**/*.nupkg' -k ${{secrets.CLOUDSMITH_API_KEY}} -n true -s https://nuget.cloudsmith.io/orchardcore/preview/v3/index.json --skip-duplicate
  
  deploy_docker:
    if: github.ref == 'refs/heads/dev'
    needs: [test,test_functional_mvc,test_functional_cms_sqlite,test_functional_cms_postgresql,test_functional_cms_mysql,test_functional_cms_mssql]
    runs-on: ubuntu-latest
    name: Deploy preview (dev) docker image
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.404
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Docker Build and Push
      run: |
        rm -rf ./src/OrchardCore.Cms.Web/App_Data
        dotnet publish -c Release -o ./.build/release
        docker build -t orchardproject/orchardcore-cms-linux:dev .
        docker push orchardproject/orchardcore-cms-linux
