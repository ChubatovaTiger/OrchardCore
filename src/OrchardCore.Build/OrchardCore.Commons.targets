<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Target Name="VerifyIncludeBuildOutputProperty" AfterTargets="BeforeCompile" BeforeTargets="CoreCompile">
    <PropertyGroup>
      <_HasCompileItems Condition=" '@(Compile)' == '' ">false</_HasCompileItems>
      <_HasCompileItems Condition=" '@(Compile)' != '' ">true</_HasCompileItems>
    </PropertyGroup>
    
    <Error Condition=" '$(_HasCompileItems)' == 'false' and '$(IncludeBuildOutput)' != 'false' " 
           Text="Project contains no 'Compile' items. Set &lt;IncludeBuildOutput&gt;false&lt;/IncludeBuildOutput&gt; in $(MSBuildProjectFile)." 
           File="$(MSBuildProjectFullPath)" />
  </Target>

  <Target Name="ApplyPackageManagement" BeforeTargets="CollectPackageReferences" DependsOnTargets="ApplyPackageManagementItems" />

  <Target Name="ApplyPackageManagementItems" Inputs="@(PackageManagement)" Outputs="%(PackageManagement.Identity)">
    <PropertyGroup>
      <_PackageManagementIdentity>%(PackageManagement.Identity)</_PackageManagementIdentity>
      <_PackageManagementVersion>%(PackageManagement.Version)</_PackageManagementVersion>
    </PropertyGroup>
    <Warning Condition=" '%(PackageReference.Identity)' == '$(_PackageManagementIdentity)' and '%(PackageReference.Version)' == '$(_PackageManagementVersion)' "
             Text="PackageReference %(PackageReference.Identity)@%(PackageReference.Version) Version attribute is not needed" 
             File="$(MSBuildProjectFullPath)" />
    <ItemGroup>
      <PackageReference Condition=" '%(Identity)' == '$(_PackageManagementIdentity)' " Version="$(_PackageManagementVersion)" ManagedVersion="true" />
    </ItemGroup>
  </Target>

  <Target Name="BeforePackageManagement" BeforeTargets="ApplyPackageManagement">
    <Message Text="BeforePackageManagement: %(PackageReference.Identity)@%(PackageReference.Version)" Importance="low" />
  </Target>

  <Target Name="AfterPackageManagement" AfterTargets="ApplyPackageManagement">
    <Message Text="AfterPackageManagement: %(PackageReference.Identity)@%(PackageReference.Version)" Importance="low" />

    <ItemGroup>
      <UnmanagedPackageReference Include="@(PackageReference)" />
      <UnmanagedPackageReference Remove="@(UnmanagedPackageReference)" Condition=" '%(UnmanagedPackageReference.ManagedVersion)' == 'true' " />
      <UnmanagedPackageReference Remove="@(UnmanagedPackageReference)" Condition=" '%(UnmanagedPackageReference.IsImplicitlyDefined)' == 'true' " />
      <UnmanagedPackageReference Remove="@(UnmanagedPackageReference)" Condition=" $([System.String]::Copy('%(Identity)').StartsWith('System.')) " />
    </ItemGroup>
    <Warning Condition=" '@(UnmanagedPackageReference)' != '' "
             Text="%(UnmanagedPackageReference.Identity)@%(UnmanagedPackageReference.Version) is an unmanaged PackageReference" 
             File="$(MSBuildProjectFullPath)" />
  </Target>

</Project>
