@model QueryBasedContentDeploymentStepViewModel
@inject OrchardCore.ContentManagement.Metadata.IContentDefinitionManager ContentDefinitionManager
@inject OrchardCore.Queries.IQueryManager QueryManager

<style asp-name="codemirror"></style>
<script asp-name="codemirror" depends-on="admin" at="Foot"></script>
<script asp-name="codemirror-mode-javascript" at="Foot"></script>

<h5>@T["Content Items"]</h5>
<span class="hint">@T["The query name which will be used to fetch data."]</span>

<div class="mb-3">
    <div class="form-check">
        <input type="checkbox" class="form-check-input" asp-for="ExportAsSetupRecipe" />
        <label class="form-check-label" asp-for="ExportAsSetupRecipe">@T["Export As Setup recipe"]</label>
        <span class="hint">@T["Check if the data should be exported as a Setup recipe."]</span>
    </div>
    <div class="alert alert-warning">@T["If checked, you will have to manually declare variables for the Content Picker fields, Taxonomy fields, Tags fields and List item ids and replace them where needed in the recipe. Any reference to these content items will be lost."]</div>
</div>

<div class="mb-3" asp-validation-class-for="QueryName">
    <label asp-for="QueryName">@T["Query"]</label>
    <select class="form-control form-control-sm" asp-for="QueryName">
        @foreach (var query in (await QueryManager.ListQueriesAsync()))
        {
            var name = query.Name;
            <option value="@name">@name</option>
        }
    </select>
    <span asp-validation-for="QueryName"></span>
    <span class="hint">@T["The query name which will be used to fetch data."]</span>
</div>

<div class="mb-3">
    <label asp-for="QueryParameters">@T["Parameters"]</label>
    <textarea asp-for="QueryParameters" class="form-control"></textarea>
    <span class="hint">@T["An optional Json object containing the parameter values for this query."]</span>
</div>

<script at="Foot">
    $(function () {
        CodeMirror.fromTextArea(document.getElementById('@Html.IdFor(m => m.QueryParameters)'), { mode: "javascript", json: true, lineNumbers: true, viewportMargin: Infinity });
    });
</script>