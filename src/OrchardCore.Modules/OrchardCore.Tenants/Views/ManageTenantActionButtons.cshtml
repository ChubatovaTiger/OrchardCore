@model ShapeViewModel<ShellSettingsEntry>

@using Microsoft.AspNetCore.Http
@using Microsoft.Extensions.Options
@using OrchardCore.Environment.Shell

@inject IOptions<TenantsOptions> TenantsOptions

<li>
    <a asp-action="Edit" asp-route-id="@Model.Value.Name" class="dropdown-item edit">@T["Edit"]</a>
</li>

@if (Model.Value.ShellSettings.IsRunning())
{
    <li>
        <a class="dropdown-item viewdropdown-item" href="@ViewContext.HttpContext.GetEncodedUrl(Model.Value, appendQuery: false)" target="_blank">@T["View"]</a>
    </li>
}
<li><hr class="dropdown-divider"></li>
@if (!Model.Value.ShellSettings.IsDefaultShell() && Model.Value.ShellSettings.IsRunning())
{
    <li>
        <a asp-action="Disable" asp-route-id="@Model.Value.Name" class="dropdown-item text-danger disable" data-url-af="RemoveUrl UnsafeUrl" data-title="@T["Disable"]" data-message="@T["Are you sure you want to disable this tenant?"]" data-ok-text="@T["Ok"]" data-cancel-text="@T["Cancel"]">@T["Disable"]</a>
    </li>
}
@if (Model.Value.ShellSettings.IsDisabled())
{
    <li>
        <a asp-action="Enable" asp-route-id="@Model.Value.Name" class="dropdown-item enable" data-url-af="UnsafeUrl">@T["Enable"]</a>
    </li>
}
@if (Model.Value.ShellSettings.IsUninitialized())
{
    <li>
        <a class="dropdown-item setup" id="btn-setup-@Model.Value.Name" href="@ViewContext.HttpContext.GetEncodedUrl(Model.Value)">@T["Setup"]</a>
    </li>
}
@if (TenantsOptions.Value.TenantRemovalAllowed && Model.Value.ShellSettings.IsRemovable())
{
    <li>
        <a asp-action="Remove" asp-route-id="@Model.Value.Name" class="dropdown-item text-danger remove" data-url-af="RemoveUrl UnsafeUrl" data-title="@T["Remove"]" data-message="@T["Are you sure you want to remove this tenant?"]" data-ok-text="@T["Ok"]" data-cancel-text="@T["Cancel"]">@T["Remove"]</a>
    </li>
}

<li>
    <a asp-action="Reload" asp-route-id="@Model.Value.Name" class="dropdown-item reload" data-url-af="UnsafeUrl">@T["Reload"]</a>
</li>
