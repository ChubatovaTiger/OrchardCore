@model BackgroundTaskIndexViewModel

<zone Name="Title"><h1>@RenderTitleSegments(T["Background Tasks"])</h1></zone>

<form asp-action="Index" method="post" class="no-multisubmit">
    <input type="submit" name="submit.Filter" id="submitFilter" class="visually-hidden" />

    <div class="card bg-primary mb-3 position-sticky action-bar">
        <div class="card-body">

            <div class="row gx-3">
                <div class="col">
                    <div class="has-search">
                        <i class="fa fa-search form-control-feedback" aria-hidden="true"></i>
                        <input id="search-box" asp-for="Options.Search" class="form-control" placeholder="@T["Search"]" type="search" autofocus />
                    </div>
                </div>
            </div>

        </div>
    </div>
</form>

<form asp-action="Index">
    @* the form is necessary to generate an antiforgery token for the delete action *@

    @if (Model.Tasks.Count > 0)
    {
        <ul class="list-group">
            @foreach (var settings in Model.Tasks.Select(t => t.Settings))
            {
                <li class="list-group-item" data-filter-value="@settings.Title @settings.Description">
                    <div class="d-flex">
                        <div class="me-auto">
                            <span class="text-primary" title="@T["Settings"]"><i class="fa fa-cog" aria-hidden="true"></i></span>
                            <span class="text-primary"><a asp-action="Edit" asp-route-name="@settings.Name">@settings.Title</a></span>
                        </div>

                        <div>
                            @if (@settings.Enable)
                            {
                                <a asp-action="Disable" asp-route-name="@settings.Name" class="btn btn-danger btn-sm" data-url-af="UnsafeUrl">@T["Disable"]</a>
                            }
                            else
                            {
                                <a asp-action="Enable" asp-route-name="@settings.Name" class="btn btn-success btn-sm" data-url-af="UnsafeUrl">@T["Enable"]</a>
                            }

                            <a asp-action="Edit" asp-route-name="@settings.Name" class="btn btn-primary btn-sm">@T["Edit"]</a>
                        </div>
                    </div>

                    @if (!String.IsNullOrWhiteSpace(settings.Description))
                    {
                        <div class="row">
                            <div class="col">
                                <p class="mb-0"><small class="text-muted">@settings.Description</small></p>
                            </div>
                        </div>
                    }

                </li>
            }
        </ul>
    }

    <div id="list-alert" class="alert alert-info mb-0@(Model.Tasks.Count > 0 ? " d-none" : String.Empty)" role="alert">
        @T["<strong>Nothing here!</strong> There are no tasks at the moment."]
    </div>

</form>

@await DisplayAsync(Model.Pager)
