@model SiteSettingsDeploymentStepViewModel
@using System.Reflection
@using Newtonsoft.Json.Linq
@inject ISiteService SiteService

@{
    var settings = Model.Settings;
    var siteSettings = await SiteService.GetSiteSettingsAsync();

    var propertyNames =
        typeof(ISite).GetProperties(BindingFlags.Public | BindingFlags.Instance).Select(property => property.Name).OrderBy(name => name)
        .Union(((IDictionary<string, JToken>)siteSettings.Properties).Keys.Where(key => key != "name").OrderBy(key => key));
}
<h5>@T["Site Settings"]</h5>

<div class="form-group">
    <span class="hint">@T["The site settings to add as part of the plan."]</span>
    <ul class="list-group w-md-50">
        @foreach (var setting in propertyNames)
        {
            var checkd = settings?.Contains(setting);

            <li class="list-group-item">
                <div class="custom-control custom-checkbox">
                    <input type="checkbox" class="custom-control-input" id="@(Html.IdFor(m => m.Settings) + "-" + setting)" name="@Html.NameFor(m => m.Settings)" value="@setting" checked="@checkd">
                    <label class="custom-control-label" for="@(Html.IdFor(m => m.Settings) + "-" + setting)">@setting</label>
                </div>
            </li>
        }
    </ul>
</div>
