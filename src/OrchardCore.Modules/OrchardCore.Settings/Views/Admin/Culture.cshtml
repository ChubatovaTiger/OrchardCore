@model SiteCulturesViewModel
@using OrchardCore.Settings.ViewModels;

<h1>@RenderTitleSegments(T["Settings"])</h1>

<p class="breadcrumb">@Html.ActionLink(T["Manage Settings"].Value, "Index", "Admin", new { area = "OrchardCore.Settings", groupId = "general" })@T[" &#62; "]@T["Supported Cultures"]</p>
<h3>@T["Available Cultures"]</h3>

<form asp-action="AddCulture" asp-route-returnUrl="@Context.Request.Query["ReturnUrl"]" method="post" enctype="multipart/form-data">
    <fieldset class="addCulture">
        <label for="CultureName">@T["Add a culture..."]</label>
        @Html.DropDownList("SystemCultureName", new SelectList(Model.AvailableSystemCultures.OrderBy(s => s), Model.CurrentCulture))
        @T["Other"]: @Html.TextBox("CultureName")
        <button class="primaryAction" type="submit">@T["Add"]</button>
    </fieldset>

    <h3>@T["Cultures this site supports"]</h3>

    <ul>
        @foreach (var contentItem in Model.SiteCultures.OrderBy(s => s))
        {
            <li>
                @Html.DisplayFor(scvm => contentItem, contentItem == Model.CurrentCulture ? "CurrentCulture" : "RemovableCulture", "")
            </li>
        }
    </ul>

    @*@Html.UnorderedList(
        Model.SiteCultures.OrderBy(s => s),
        (s, i) => Html.DisplayFor(scvm => s, s == Model.CurrentCulture ? "CurrentCulture" : "RemovableCulture", ""),
        "site-cultures", "culture", "odd")*@
</form>
