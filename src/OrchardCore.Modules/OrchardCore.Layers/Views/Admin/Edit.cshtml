@model LayerEditViewModel
@{
    var routeValues = new RouteValueDictionary
    {
        { "area", "OrchardCore.Layers" },
        { "controller", "LayerRule" },
        { "name", Model.Name }
    };
    ViewData["RuleRouteValues"] = routeValues;
}

<zone Name="Title"><h1>@RenderTitleSegments(T["Edit Layer - {0}", Model.Name])</h1></zone>

<script asp-src="~/OrchardCore.Rules/Scripts/rules.min.js" debug-src="~/OrchardCore.Rules/Scripts/rules.js" depends-on="sortable, jQuery" at="Foot"></script>
<style asp-src="~/OrchardCore.Rules/Styles/rules.min.css" debug-src="~/OrchardCore.Rules/Styles/rules.css"></style>

<form asp-action="Edit" method="post">
    <div class="form-group" asp-validation-class-for="Name">
        <label asp-for="Name">@T["Name"]</label>
        <input readonly="readonly" asp-for="Name" class="form-control" type="text" />
        <span asp-validation-for="Name"></span>
    </div>

    <div class="form-group" asp-validation-class-for="Rule">
        <label asp-for="Rule">@T["Rule"]</label>
        <input asp-for="Rule" class="form-control" type="text" />
        <span asp-validation-for="Rule"></span>
    </div>

    <div class="form-group" asp-validation-class-for="Description">
        <label asp-for="Description">@T["Description"]</label>
        <textarea asp-for="Description" class="form-control" rows="3" type="text"></textarea>
        <span asp-validation-for="Description"></span>
    </div>       

    @await DisplayAsync(Model.RuleContainer)

    <input class="button mt-3" type="submit" value="@T["Save"]" />
</form>


<!-- Modal TODO move to partial in Rules module -->
<div class="modal fade" id="modalRules" tabindex="-1" role="dialog" aria-labelledby="available-rules-title" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="available-rules-title">@T["Available Rules"]</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <input class="form-control" id="search-box" type="search" placeholder="@T["Filter"]" aria-label="@T["Filter"]" autofocus />
                </div>
                <div id="cards" class="row">
                    @foreach (var thumbnail in Model.Thumbnails.OrderBy(t => t.Key))
                    {
                        thumbnail.Value.TargetUrl = Url.ActionLink("Create", "LayerRule", new { name = Model.Name, type = thumbnail.Key });
                        <div class="col-sm-12 col-md-6 col-lg-4 d-flex align-items-stretch card-item">
                            @await DisplayAsync(thumbnail.Value)
                        </div>
                    }
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">@T["Cancel"]</button>
            </div>
        </div>
    </div>
</div>

<script At="Foot" depends-on="jQuery">
    $(function () {
        $('#modalRules').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget) // Button that triggered the modal
            var ruleGroupId = button.data('rule-group-id');

            $('.rule-thumbnail').one('click', function () {
                var url = $(this).data("target-url") + "&ruleGroupId=" + ruleGroupId;
                $(location).attr('href',url);
            });
        });
    });

</script>