@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc.Localization

@model ShapeViewModel<UserNotificationCollectionViewModel>

@inject IContentManager ContentManager
@inject IAuthorizationService AuthorizationService

<div class="dropdown mx-3">
    <a class="dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
        @if (Model.Value.TotalUnread > 0)
        {
            var notifications = T.Plural(Model.Value.TotalUnread, "notification", "notifications");
            LocalizedHtmlString title;
            if (Model.Value.TotalUnread > Model.Value.MaxVisibleNotifications)
            {
                title = T["You have more than {0} unread {1}", Model.Value.MaxVisibleNotifications, notifications];
            }
            else
            {
                title = T["You have {0} unread {1}", Model.Value.TotalUnread, notifications];
            }

            <i class="fa fa-bell" aria-hidden="true" data-bs-toggle="tooltip" data-bs-original-title="@title"></i>
        }
        else
        {
            <i class="fa fa-bell-o" aria-hidden="true" data-bs-toggle="tooltip" data-bs-original-title="@T["You have no unread notifications"]"></i>
        }
    </a>
    <div class="dropdown-menu notification-navbar" style="width: 20rem;">
        @if (Model.Value.Notifications.Count > 0)
        {
            var maxCount = Math.Min(Model.Value.MaxVisibleNotifications, Model.Value.Notifications.Count);
            <div style="max-height: 30rem; overflow-y: auto;">
                @for (int i = 0; i < maxCount; i++)
                {
                    var notification = Model.Value.Notifications[i];
                    var url = notification.Url;

                    if (notification.ContentItem != null)
                    {
                        if (await AuthorizationService.AuthorizeAsync(User, OrchardCore.Contents.CommonPermissions.EditContent, notification.ContentItem))
                        {
                            url = Url.Action("Edit", "Admin", new { area = "OrchardCore.Contents", notification.ContentItem.ContentItemId });
                        }
                        else if (await AuthorizationService.AuthorizeAsync(User, OrchardCore.Contents.CommonPermissions.ViewContent, notification.ContentItem))
                        {
                            url = Url.Action("Display", "Admin", new { area = "OrchardCore.Contents", notification.ContentItem.ContentItemId });
                        }
                    }

                    <div data-message-id="@notification.NotificationId" data-is-read="@notification.IsRead.ToString().ToLowerInvariant()" data-target-url="@url" class="dropdown-item mark-notification-as-read lh-sm text-wrap p-2@(i < maxCount - 1 ? " border-bottom" : String.Empty)@(notification.IsRead ? " notification-is-read": " notification-is-unread")">
                        @if (notification.ContentItem != null && notification.HasBody())
                        {
                            if (notification.IsHtmlBody)
                            {
                                <span aria-hidden="false" data-bs-toggle="tooltip" data-bs-original-title="@notification.Subject">@Html.Raw(notification.Body)</span>
                            }
                            else
                            {
                                <span aria-hidden="false" data-bs-toggle="tooltip" data-bs-original-title="@notification.Subject">@notification.Body</span>
                            }
                        }
                        else
                        {
                            <span aria-hidden="false">@notification.Subject</span>
                        }
                    </div>
                }
            </div>
            <div><hr class="dropdown-divider"></div>
        }
        <div><a class="dropdown-item fw-bold" asp-action="List" asp-controller="Admin" asp-area="OrchardCore.Notifications">@T["All Notifications"]</a></div>
    </div>
</div>

<script at="Foot" asp-name="notification-manager-initializes" depends-on="notification-manager">
    (function () {
        notificationManager.initializeContainer('@Url.Action("Read", "WebNotification", new { area = "OrchardCore.Notifications" })')
    })();
</script>

<style at="Head">
    .notification-navbar .notification-is-unread {
        font-weight: 600;
    }
</style>
