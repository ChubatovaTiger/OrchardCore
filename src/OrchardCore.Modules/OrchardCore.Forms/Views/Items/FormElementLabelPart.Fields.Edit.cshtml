@using OrchardCore.Forms.ViewModels
@using OrchardCore.Forms.Models
@model FormElementLabelPartViewModel
@{
    var wrapperId = Html.IdFor(m => m);
}
<div class="properties-wrapper show-for-input" id="@wrapperId">

    <div class="mb-3 show-for-input-label">
        <label asp-for="LabelOption">@T["Label option"]</label>
        <select asp-for="LabelOption" class="form-select content-preview-select field-label-option-select-menu">
            <option value="@LabelOptions.None">@T["None"]</option>
            <option value="@LabelOptions.Standard">@T["Standard"]</option>
            <option value="@LabelOptions.ScreenReaders">@T["Screen Readers"]</option>
        </select>
        <span class="hint">@T["The type of label to create for this field."]</span>
    </div>

    <div class="mb-3 d-none label-text-container">
        <label asp-for="Label">@T["Label Text"]</label>
        <input asp-for="Label" type="text" class="form-control content-preview-text" />
        <span class="hint">@T["The text to display in the label."]</span>
    </div>
</div>

<script at="Foot">
    var initilizeLabelType = (wrapper) => {
        var selectMenus = wrapper.getElementsByClassName('field-label-option-select-menu');

        for (let i = 0; i < selectMenus.length; i++) {
            var selectMenu = selectMenus[i];
            selectMenu.addEventListener('change', function(e) {
                var labelTextContainer = wrapper.querySelector('.label-text-container');

                if (e.target.value == '@LabelOptions.None') {
                    labelTextContainer.classList.add('d-none');
                } else {
                    labelTextContainer.classList.remove('d-none');
                }
            });
            selectMenu.dispatchEvent(new Event('change'));
        }
    };

    var wrapper = document.getElementById('@wrapperId');

    if (wrapper != null) {
        initilizeLabelType(wrapper);
    }

    document.addEventListener('DOMContentLoaded', function() {
        initilizeLabelType(document);
    });
</script>
