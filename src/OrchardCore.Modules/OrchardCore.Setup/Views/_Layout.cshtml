@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.Extensions.Options
@using System.Globalization; 
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer T
@inject OrchardCore.IOrchardHelper Orchard
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var currentUICulture = requestCulture.RequestCulture.UICulture;
}
<!DOCTYPE html>
<html lang="@Orchard.CultureName()" dir="@Orchard.CultureDir()">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Orchard Setup</title>
    <link type="text/css" rel="stylesheet" href="~/OrchardCore.Setup/Styles/setup.min.css" />
    <link type="text/css" rel="stylesheet" href="~/OrchardCore.Resources/Styles/font-awesome.min.css" />
    @await RenderSectionAsync("Header", required: false)
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="form-group col mt-2">
                @if (LocOptions.Value.SupportedUICultures.Count() > 1)
                {
                    <div class="float-right form-inline">
                        <label for="culturesList" class="mr-2">@T["Change setup culture: "]</label>
                        <select id="culturesList" class="form-control" onchange="setLocalizationCookie()">
                            @foreach (var culture in LocOptions.Value.SupportedUICultures)
                            {
                                @if (culture.TwoLetterISOLanguageName == currentUICulture.TwoLetterISOLanguageName)
                                {
                                    <option value="@culture" selected>@(culture.DisplayName ?? culture.Name)</option>
                                }
                                else
                                {
                                    <option value="@culture">@(culture.DisplayName ?? culture.Name)</option>
                                }
                            }
                        </select>
                    </div>
                }
            </div>
        </div>

        @RenderBody()

        <hr />
        <footer>
            @await RenderSectionAsync("Footer", required: false)
        </footer>
    </div>
    <script>
        function setLocalizationCookie() {
            var culturesList = document.getElementById('culturesList');
            var culture = culturesList.options[culturesList.selectedIndex].value
            var url = window.location.origin;

            if (url.indexOf('?') > -1) {
                url = url.split('&ui-culture=')[0] + '&';
            }
            else {
                url += '?';
            }

            url += 'ui-culture=' + culture;
            window.location = url;
        }
    </script>
</body>
</html>
