@model OrchardCore.ContentFields.ViewModels.EditTextFieldViewModel
@using OrchardCore.Mvc.Utilities
@{
    var settings = Model.PartFieldDefinition.GetSettings<TextFieldSettings>();
    var culture = await Orchard.GetContentCultureAsync(Model.Field.ContentItem);
    var uniqueName = $"{Model.PartFieldDefinition.PartDefinition.Name}-{Model.PartFieldDefinition.Name}";
    var additionalClasses = new List<string> { "field-wrapper", $"field-wrapper-{uniqueName.HtmlClassify()}" };

    var isNamedPart = Model.PartFieldDefinition.ContentTypePartDefinition.Name != Model.PartFieldDefinition.PartDefinition.Name;
    if (isNamedPart)
    {
        var namedPartUniqueName = $"{Model.PartFieldDefinition.ContentTypePartDefinition.Name}-{Model.PartFieldDefinition.Name}";
        additionalClasses.Add($"field-wrapper-{namedPartUniqueName.HtmlClassify()}");
    }
}

<div class="@Orchard.GetWrapperCssClasses(additionalClasses.ToArray())" id="@Html.IdFor(x => x.Text)_FieldWrapper">
    <label asp-for="Text" class="@Orchard.GetLabelCssClasses()">@Model.PartFieldDefinition.DisplayName()</label>
    <div class="@Orchard.GetEndCssClasses()">
        <input asp-for="Text" class="form-control content-preview-text" dir="@culture.GetLanguageDirection()" />
        @if (!string.IsNullOrEmpty(settings.Hint))
        {
            <span class="hint">@settings.Hint</span>
        }
    </div>
</div>
