@model AdminMenuListViewModel
@{
    int startIndex = (Model.Pager.Page - 1) * (Model.Pager.PageSize) + 1;
    int endIndex = startIndex + Model.AdminMenu.Count - 1;
}

<style asp-src="~/OrchardCore.AdminMenu/Styles/admin-menu.min.css" debug-src="~/OrchardCore.AdminMenu/Styles/admin-menu.css" at="Head" depends-on="admin"></style>
<script asp-src="~/OrchardCore.AdminMenu/Scripts/admin-menu.min.js" debug-src="~/OrchardCore.AdminMenu/Scripts/admin-menu.js" at="Foot" depends-on="admin"></script>

<h1>@RenderTitleSegments(T["Admin Menus"])</h1>

<form asp-action="List" method="get" class="position-sticky action-bar">
    <div class="card mb-3">
        <div class="card-body bg-primary p-3">
            <div class="form-group mb-n1">
                <div class="input-group input-group-sm w-lg-50 d-inline-flex">
                    <div class="input-group-prepend">
                        <span class="input-group-text bg-secondary text-light">@T["Filter"]</span>
                    </div>
                    <input asp-for="Options.Search" class="form-control" placeholder="@T["Search"]" type="search" autofocus />
                    <div class="input-group-append">
                        <button type="submit" class="btn btn-sm btn-secondary">@T["Search"]</button>
                    </div>
                </div>
                <div class="btn-group float-right">
                    <a asp-route-action="Create" class="btn btn-sm btn-secondary float-right create" role="button">@T["Add Admin Menu"]</a>
                </div>
            </div>
        </div>
    </div>
</form>

<form asp-action="Index">
    @* the form is necessary to generate an antiforgery token for the delete and toggle actions *@

    @if (Model.AdminMenu.Any())
    {
        <ul id="content-items-list-body" class="list-group">
            <li class="list-group-item bg-primary">
                <div class="row">
                    <div class="form-group col-xl-4 mb-n1">
                        <label id="items" for="select-all">@T.Plural(Model.AdminMenu.Count, "1 item", "{0} items")<span class="text-muted" title="@T["Items {0} to {1}", startIndex, endIndex]">@T.Plural((int)Model.Pager.TotalItemCount, " / {0} item in total", " / {0} items in total")</span></label>
                        <label id="selected-items" class="text-muted" for="select-all"></label>
                    </div>
                </div>
            </li>
            @foreach (var entry in Model.AdminMenu)
            {
                <li class="list-group-item @(entry.AdminMenu.Enabled ? "" : "disabled-tree")">
                    <div class="related">
                        <a asp-controller="Node" asp-action="List" asp-route-id="@entry.AdminMenu.Id" class="btn btn-secondary btn-sm">@T["Edit Nodes"]</a>
                        <a asp-action="Edit" asp-route-id="@entry.AdminMenu.Id" class="btn btn-primary btn-sm">@T["Edit"]</a>
                        <div class="btn-group btn-group-sm">
                            <a asp-action="Delete"
                               asp-route-id="@entry.AdminMenu.Id"
                               class="btn btn-danger" itemprop="RemoveUrl UnsafeUrl">@T["Delete"]</a>
                            <button type="button" class="btn btn-danger dropdown-toggle dropdown-toggle-split" data-reference="parent" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="sr-only">@T["Toggle Dropdown"]</span>
                            </button>
                            <div class="dropdown-menu dropdown-menu-right">
                                <a asp-action="Toggle"
                                   asp-route-id="@entry.AdminMenu.Id"
                                   class="dropdown-item btn-sm" itemprop="UnsafeUrl">@(entry.AdminMenu.Enabled ? T["Disable"] : T["Enable"])</a>
                            </div>
                        </div>
                    </div>
                    <a asp-controller="Node" asp-action="List" asp-route-id="@entry.AdminMenu.Id" class="tree-name-link">@entry.AdminMenu.Name</a>
                </li>
            }
        </ul>
    }
    else
    {
        <div class="no-results alert alert-info" role="alert">
            @T["<strong>Nothing here!</strong> There are no menus for the moment."]
        </div>
    }
</form>

@await DisplayAsync(Model.Pager)
