@using Newtonsoft.Json
@model CorsSettingsViewModel

@{
    var settings = new JsonSerializerSettings { StringEscapeHandling = StringEscapeHandling.EscapeHtml };
}

<script asp-src="https://vuejs.org/js/vue.min.js" debug-src="https://vuejs.org/js/vue.js" asp-name="vuejs" at="Foot" depends-on="jQuery"></script>
<script depends-on="vuejs" asp-src="~/OrchardCore.Cors/Scripts/cors-admin.min.js" debug-src="~/OrchardCore.Cors/Scripts/cors-admin.js" type="text/javascript" asp-name="cors-admin" at="Foot"></script>
<script depends-on="cors-admin" at="Foot">
    corsApp.policies = @Html.Raw(Json.Serialize(Model.Policies, settings));
</script>
<style>
    [v-cloak] {
        display: none;
    }
</style>
<div asp-validation-summary="ModelOnly"></div>
<zone Name="Title">
    <h1>@T["Cors Settings"]</h1>
</zone>
<span class="subscript">@T["CORS stands for Cross-Origin Request more information can be found here"] <a target="_blank" href="https://docs.microsoft.com/en-us/aspnet/core/security/cors">https://docs.microsoft.com/en-us/aspnet/core/security/cors</a></span>
<form id="corsForm" asp-action="Index" method="post">
    <input type="hidden" name="CorsSettings" id="CorsSettings" value='@Html.Raw(Json.Serialize(Model.Policies, settings))' />
    <div id="corsAdmin">
        <div v-if="!selectedPolicy">
            <nav class="admin-toolbar">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item">
                        <button class="btn btn-primary" type="button" v-on:click="newPolicy">@T["Add a policy"]</button>
                    </li>
                </ul>
            </nav>
            <ul class="list-group mb-2" v-cloak>
                <li class="list-group-item" v-for="policy in policies">
                    <div class="properties">
                        <div class="related float-xs-right">
                            <span v-if="policy.IsDefaultPolicy" class="badge ta-badge">@T["Default Policy"]</span>
                            <button class="btn btn-primary btn-sm" type="button" v-on:click="editPolicy(policy)">@T["Edit"]</button>
                            <button class="delete btn btn-danger btn-sm" type="button" v-on:click="deletePolicy(policy, $event)">@T["Delete"]</button>
                        </div>
                        {{ policy.Name }}
                    </div>
                </li>
            </ul>
        </div>
        <policy-details v-if="selectedPolicy" v-bind:policy="selectedPolicy" v-on:ok="updatePolicy" v-on:back="back" />
    </div>
</form>

<script type="text/x-template" id="policy-details">
    <div>
        <h3>{{ policy.Name }}</h3>
        <div class="card mb-2">
            <div class="card-body">
                <h5 class="card-title">
                    @T["Details"]
                    <span class="hint">@T[" - Provide policy details"]</span>
                </h5>
                <div class="form-group">
                    <label>@T["Policy name"]</label>
                    <input v-model="policy.Name" placeholder="edit me" type="text" class="form-control" />
                    <span class="hint">@T["Name of the policy"]</span>
                </div>
                <div class="form-group">
                    <div class="form-check">
                        <label>
                            <input class="form-check-input" v-model="policy.IsDefaultPolicy" type="checkbox">@T["Set policy as default policy"]
                        </label>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-2">
            <div class="card-body">
                <h5 class="card-title">
                    @T["Credentials"]
                    <span class="hint">@T[" - Configure the credentials behavior"]</span>
                </h5>

                <div class="form-group">
                    <div class="form-check">
                        <label>
                            <input class="form-check-input" v-model="policy.AllowCredentials" type="checkbox" />@T["Allow credentials"]
                        </label>
                    </div>
                    <span class="hint">@T["Allows credentials to be transported in requests. Be aware that this setting is not allowed in combination with Allow Any Origin."]</span>
                </div>
            </div>
        </div>

        <div class="card mb-2">
            <div class="card-body">
                <h5 class="card-title">
                    @T["Origins"]
                    <span class="hint">@T[" - Configure the origins behavior"]</span>
                </h5>

                <div class="form-group">
                    <div class="form-check">
                        <label>
                            <input class="form-check-input" v-model="policy.AllowAnyOrigin" type="checkbox" />
                            @T["Allow any origin"]
                        </label>
                        <span class="hint">@T["Allows requests from any origin. This will bypass any origin that is configured below."]</span>
                    </div>
                    <options-list v-bind:options="policy.AllowedOrigins" optionType="@T["Origin"]" title="@T["Allowed origins"]" subTitle="" />
                </div>
            </div>
        </div>

        <div class="card mb-2">
            <div class="card-body">
                <h5 class="card-title">
                    @T["Headers"]
                    <span class="hint">@T[" - Allow certain or all headers to be used by the external client"]</span>
                </h5>

                <div class="form-group">
                    <div class="form-check">
                        <label>
                            <input class="form-check-input" v-model="policy.AllowAnyHeader" type="checkbox" />
                            @T["Allow any header"]
                        </label>
                    </div>
                    <span class="hint">@T["Allows requests with any header. This will bypass any headers that are configured below."]</span>
                    <options-list v-bind:options="policy.AllowedHeaders" optionType="@T["Header"]" title="@T["Allowed headers"]" subTitle="" />
                </div>
            </div>
        </div>

        <div class="card mb-2">
            <div class="card-body">
                <h5 class="card-title">
                    @T["Methods"]
                    <span class="hint">@T[" - Configure the methods behavior (POST, PUT, DELETE, GET, etc)"]</span>
                </h5>

                <div class="form-group">
                    <div class="form-check">
                        <label><input class="form-check-input" v-model="policy.AllowAnyMethod" type="checkbox" />@T["Allow any method"]</label>
                    </div>
                    <span class="hint">@T["Allows requests with any method. This will bypass any methods that are configured below."]</span>

                    <options-list v-bind:options="policy.AllowedMethods" optionType="@T["Method"]" title="@T["Allowed methods"]" subTitle="" />
                </div>
            </div>
        </div>
        <div class="form-group">
            <button type="button" class="btn btn-primary" v-on:click="$emit('ok', policy, $event)">@T["Save"]</button>
            <button type="button" class="btn btn-warning" v-on:click="$emit('back')">@T["Cancel"]</button>
        </div>
    </div>
</script>

<script type="text/x-template" id="options-list">
    <div>
        <label>{{ title }}</label>
        <span class="hint" v-if="subTitle">{{ subTitle }}</span>
        <nav class="admin-toolbar">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item">
                    <div class="row">
                        <div class="col">
                            <input v-model="newOption" type="text" class="form-control" />
                        </div>
                        <div class="col">
                            <button type="button" class="btn btn-primary btn-sm" v-on:click="addOption(newOption)">@T["Add"] {{ optionType }}</button>
                        </div>
                    </div>
                </li>
            </ul>
        </nav>

        <ul class="list-group" v-for="option in options">
            <li class="list-group-item">
                <div class="properties">
                    <div class="related float-xs-right">
                        <button type="button" class="btn btn-danger btn-sm" v-on:click="deleteOption(option)">@T["Delete"]</button>
                    </div>
                    {{ option }}
                </div>
            </li>
        </ul>
    </div>
</script>
