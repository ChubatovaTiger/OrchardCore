@model Orchard.Media.ViewModels.EditMediaFieldViewModel
@using Orchard.Media.Settings;
@using Orchard.ContentManagement.Metadata.Models

@{
    var settings = Model.PartFieldDefinition.Settings.ToObject<MediaFieldSettings>();
    var modalMediaId = "Modal" + Html.IdFor(m => m);
}

<div class="mediafield-editor" id="@Html.IdFor(m => m)" data-for="@Html.IdFor(m => m.Paths)">
    <div class="media-field">
        <fieldset class="form-group">
            <label asp-for="Paths">@Model.PartFieldDefinition.DisplayName()</label>
            @if (!string.IsNullOrWhiteSpace(settings.Hint))
            {
                <span class="hint">@settings.Hint</span>
            }

            <input asp-for="Paths" type="hidden" class="paths" :value="paths" data-init="@Model.Paths" />

            <nav id="media-toolbar">
                <div class="btn-group">
                    <a href="javascript:;" v-on:click="showModal" class="btn btn-secondary btn-sm"><i class="fa fa-plus text-muted"></i></a>
                    <a v-cloak v-show="selectedMedia" href="javascript:;" v-on:click="removeSelected" class="btn btn-secondary btn-sm"><i class="fa fa-trash text-muted"></i></a>
                </div>
                <code class="pull-right" v-if="selectedMedia">@T["{{{{ selectedMedia.name }}}} ({{{{ fileSize }}}} KB)"]</code>
            </nav>

        </fieldset>
        <fieldset class="form-group">
            <div id="filesApp" class="media-container-main" v-cloak>
                <ol class="row">
                    <li v-for="media in mediaItems"
                        :key="media.name"
                        class="media-container-main-list-item"
                        v-on:click="selectMedia(media)">
                        <div class="media-container-main-item" v-bind:class="{selected: selectedMedia == media}">
                            <img v-bind:src="media.url + '?width=240&height=240'" />
                            <div class="media-container-main-item-title">
                                <span class="media-filename">{{ media.name }}</span>
                            </div>
                        </div>
                    </li>
                </ol>
            </div>
        </fieldset>
    </div>
</div>

@if (!Context.Items.ContainsKey("mediaFieldModalBody"))
{
    Context.Items["mediaFieldModalBody"] = new object();

    <div class="modal" id="mediaFieldModalBody">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@T["Select Media"]</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="mediaFieldSelectButton">@T["OK"]</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">@T["Cancel"]</button>
                </div>
            </div>
        </div>
    </div>

    <div class="hidden-xs-up">
        @await DisplayAsync(New.Media_Application())
    </div>

    <input type="hidden" id="getMediaItemUrl" value="@Url.Action("GetMediaItem", "Admin", new { area = "Orchard.Media" })" />
}