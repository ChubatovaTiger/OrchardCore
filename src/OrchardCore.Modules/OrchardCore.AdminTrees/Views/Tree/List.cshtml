@model AdminTreeListViewModel

<style asp-src="/OrchardCore.AdminTrees/Styles/admin-trees.css" debug-src="/OrchardCore.AdminTrees/Styles/admin-trees.css" ></style>
<script asp-src="/OrchardCore.AdminTrees/Scripts/admin-trees.js" asp-name="admin-tree" at="Foot" depends-on="admin"></script>

<h1>@RenderTitleSegments(T["Admin Trees"])</h1>

<nav class="admin-toolbar">
    <ul class="navbar-nav mr-auto">
        <li class="nav-item">
            <a asp-route-action="Create" class="btn btn-primary" role="button">
                @T["Add Admin Tree"]
            </a>
        </li>
    </ul>
    <form asp-action="List" method="get" class="form-inline my-2 my-lg-0">
        <input id="search-box" asp-for="Options.Search" class="form-control mr-sm-2" type="text" placeholder="@T["Search"]" autofocus="autofocus">
        <button type="submit" class="btn btn-secondary">@T["Search"]</button>
    </form>
</nav>

<form asp-action="Index">
    @* the form is necessary to generate an antiforgery token for the delete and toggle actions *@

    @if (Model.AdminTrees.Any())
    {
    <ul id="content-items-list-body" class="list-group">
        @foreach (var entry in Model.AdminTrees)
        {
            <li class="list-group-item @(entry.AdminTree.Enabled ? "" : "disabled-tree")">
                <div class="properties">
                    <div class="related">
                        <a asp-controller="Node" asp-action="List" asp-route-id="@entry.AdminTree.Id" class="btn btn-secondary btn-sm">@T["Edit Nodes"]</a>
                        <a asp-action="Edit" asp-route-id="@entry.AdminTree.Id" class="btn btn-primary btn-sm">@T["Edit"]</a>
                        <a asp-action="Delete" asp-route-id="@entry.AdminTree.Id" class="btn btn-danger btn-sm" itemprop="RemoveUrl UnsafeUrl">@T["Delete"]</a>
                    </div>
                    <a asp-controller="Node" asp-action="List" asp-route-id="@entry.AdminTree.Id" class="tree-name-link">@entry.AdminTree.Name</a>
                </div>
            </li>
        }
    </ul>
    }
    else
    {
        <div class="no-results alert alert-info" role="alert">
            @T["<strong>Nothing here!</strong>"]
        </div>
    }
</form>

<div id="footer-pager" class="fade-in-pager">
    @await DisplayAsync(Model.Pager)
</div>
