@model ContentOptionsViewModel
@{
    var ownerFilterUserSearchUrl = Url.RouteUrl(new { area = "OrchardCore.Contents", controller = "Admin", action = "OwnerFilterUserSearch" });
}
<div class="btn-group filter">
    @if (Model.ContentTypeOptions.Count > 0)
    {
        <select asp-for="SelectedContentType" asp-items="Model.ContentTypeOptions" class="selectpicker contenttypes-selectpicker show-tick me-2" data-header="@T["Filter by content type"]" data-selected-text-format="static" data-width="fit" data-dropdown-align-right="auto" title="@T["Content Type"]" data-style="btn-sm" data-live-search="true"></select>
    }
    <select asp-for="ContentsStatus" asp-items="@Model.ContentStatuses" class="selectpicker contentstatuses-selectpicker show-tick me-2" data-header="@T["Filter by status"]" data-selected-text-format="static" data-width="fit" data-dropdown-align-right="auto" title="@T["Show"]" data-style="btn-sm"></select>
    <select asp-for="SelectedOwnerUserName" class="ajax-selectpicker contentowners-selectpicker show-tick me-2" data-header="@T["Filter by owner"]" data-selected-text-format="static" data-width="fit" data-dropdown-align-right="auto" title="@T["Owner"]" data-style="btn-sm" data-live-search="true" data-size="5"></select>
    <select asp-for="OrderBy" asp-items="@Model.ContentSorts" class="selectpicker contentsorts-selectpicker show-tick" data-header="@T["Sort by"]" data-width="fit" data-selected-text-format="static" data-dropdown-align-right="true" title="@T["Sort"]" data-style="btn-sm"></select>
</div>

<script depends-on="jQuery" at="Foot">
    $(function () {
        var selectedOwnerUserName = '@Model.SelectedOwnerUserName';

        // bootstrap-select has an issue with hammering the server, so we use flags to only make a request 
        // if something changes that would warrant another request
        var previousPage;
        var previousSearchTerm;

        $('#@Html.IdFor(m => m.SelectedOwnerUserName)').selectpicker({
            chunkSize: 10,
            source: {
                pageSize: 10,
                data: function (callback, page) {
                    if (previousPage !== page) {
                        previousPage = page;

                        $.ajax('@ownerFilterUserSearchUrl', { data: { page, selectedOwnerUserName } })
                            .then((response) => callback(response.results, response.hasMoreResults));
                    }
                },
                search: function (callback, page, searchTerm) {
                    if (previousPage !== page || previousSearchTerm !== searchTerm) {
                        previousPage = page;
                        previousSearchTerm = searchTerm;

                        $.ajax('@ownerFilterUserSearchUrl', { data: { page, searchTerm, selectedOwnerUserName } })
                            .then((response) => callback(response.results, response.hasMoreResults));
                    }                    
                }
            }
        });
    })
</script>
