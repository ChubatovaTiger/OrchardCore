@using OrchardCore.ContentManagement.Metadata.Models
@using OrchardCore.ContentManagement.Metadata.Settings
@using OrchardCore.ContentManagement
@using OrchardCore

@{
    ContentPart contentPart = Model.ContentPart;
    ContentTypePartDefinition typePartDefinition = Model.ContentTypePartDefinition;
    var description = typePartDefinition.Description();
    var namedPart = typePartDefinition.PartDefinition.IsReusable() && typePartDefinition.Name != typePartDefinition.PartDefinition.Name;
    var name = typePartDefinition.PartDefinition.Name.HtmlClassify();
    var additionalClasses = new List<string> { "content-part-wrapper", $"content-part-wrapper-{name}" };
    if (namedPart)
    {
        var namedPartTechnicalName = typePartDefinition.Name.HtmlClassify();
        additionalClasses.Add($"content-part-wrapper-{namedPartTechnicalName}");
    }
}

@if (namedPart)
{
    <div class="@Orchard.GetWrapperCssClasses(additionalClasses.ToArray())">
        <div class="@Orchard.GetLabelCssClasses()">
            @typePartDefinition.DisplayName()

            @if (!string.IsNullOrEmpty(description))
            {
                <small class="form-text text-muted">@description</small>
            }
        </div>

        <div class="@Orchard.GetEndCssClasses()">
            @foreach (var shape in Model)
            {
                @await DisplayAsync(shape)
            }
        </div>
    </div>
}
else
{
    <div class="content-part-wrapper content-part-wrapper-@name">
        @foreach (var shape in Model)
        {
            @await DisplayAsync(shape)

        }
    </div>
}
