@using OrchardCore.Security
@using OrchardCore.Security.ViewModels
@model SecuritySettingsViewModel

<p class="alert alert-warning">
    @T["The current tenant will be reloaded when the settings are saved."]
</p>

<div class="form-group" asp-validation-class-for="FrameOptions">
    <label asp-for="FrameOptions">@T["Frame Options"]</label>
    <select asp-for="FrameOptions" class="form-control">
        <option value="@FrameOptionsValue.Deny" selected="@(Model.FrameOptions == FrameOptionsValue.Deny)">
            @T["Deny"]
        </option>
        <option value="@FrameOptionsValue.SameOrigin" selected="@(Model.FrameOptions == FrameOptionsValue.SameOrigin)">
            @T["Same origin"]
        </option>
    </select>
    <span asp-validation-for="FrameOptions"></span>
    <span class="hint">@T["Tells the browser whether you want to allow your site to be framed or not."]</span>
</div>
<div class="form-group" asp-validation-class-for="PermissionsPolicy">
    <label asp-for="PermissionsPolicy">@T["Permissions Policy"]</label>
    <select asp-for="PermissionsPolicy" class="form-control" multiple>
        <option value="@PermissionsPolicyValue.Accelerometer" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.Accelerometer))">
            @T["Accelerometer"]
        </option>
        <option value="@PermissionsPolicyValue.AmbientLightSensor" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.AmbientLightSensor))">
            @T["Ambient Light Sensor"]
        </option>
        <option value="@PermissionsPolicyValue.Autoplay" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.Autoplay))">
            @T["Autoplay"]
        </option>
        <option value="@PermissionsPolicyValue.Camera" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.Camera))">
            @T["Camera"]
        </option>
        <option value="@PermissionsPolicyValue.EncryptedMedia" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.EncryptedMedia))">
            @T["Encrypted Media"]
        </option>
        <option value="@PermissionsPolicyValue.FullScreen" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.FullScreen))">
            @T["Full Screen"]
        </option>
        <option value="@PermissionsPolicyValue.Geolocation" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.Geolocation))">
            @T["Geolocation"]
        </option>
        <option value="@PermissionsPolicyValue.Gyroscope" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.Gyroscope))">
            @T["Gyroscope"]
        </option>
        <option value="@PermissionsPolicyValue.Magnetometer" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.Magnetometer))">
            @T["Magnetometer"]
        </option>
        <option value="@PermissionsPolicyValue.Microphone" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.Microphone))">
            @T["Microphone"]
        </option>
        <option value="@PermissionsPolicyValue.Midi" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.Midi))">
            @T["Midi"]
        </option>
         <option value="@PermissionsPolicyValue.Notification" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.Notification))">
            @T["Notification"]
        </option>
        <option value="@PermissionsPolicyValue.Payment" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.Payment))">
            @T["Payment"]
        </option>
        <option value="@PermissionsPolicyValue.PictureInPicture" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.PictureInPicture))">
            @T["Picture in Picture"]
        </option>
        <option value="@PermissionsPolicyValue.Push" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.Push))">
            @T["Push"]
        </option>
        <option value="@PermissionsPolicyValue.Speaker" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.Speaker))">
            @T["Speaker"]
        </option>
        <option value="@PermissionsPolicyValue.SynchronousXhr" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.SynchronousXhr))">
            @T["Synchronous XMLHttpRequest"]
        </option>
        <option value="@PermissionsPolicyValue.Usb" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.Usb))">
            @T["USB"]
        </option>
        <option value="@PermissionsPolicyValue.Vibrate" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.Vibrate))">
            @T["Vibrate"]
        </option>
        <option value="@PermissionsPolicyValue.VR" selected="@(Model.PermissionsPolicy.Contains(PermissionsPolicyValue.VR))">
            @T["VR"]
        </option>
    </select>
    <span asp-validation-for="PermissionsPolicy"></span>
    <span class="hint">@T["Allows a site to control which features and APIs can be used in the browser."]</span>
</div>
<div class="form-group" asp-validation-class-for="PermissionsPolicyOrigin">
    <label asp-for="PermissionsPolicyOrigin">@T["Permissions Policy Origin"]</label>
    <select asp-for="PermissionsPolicyOrigin" class="form-control">
        <option value="@PermissionsPolicyOriginValue.Any" selected="@(Model.PermissionsPolicyOrigin == PermissionsPolicyOriginValue.Any)">
            @T["Any"]
        </option>
        <option value="@PermissionsPolicyOriginValue.Self" selected="@(Model.PermissionsPolicyOrigin == PermissionsPolicyOriginValue.Self)">
            @T["Self"]
        </option>
    </select>
    <span asp-validation-for="PermissionsPolicyOrigin"></span>
</div>
<div class="form-group" asp-validation-class-for="ReferrerPolicy">
    <label asp-for="ReferrerPolicy">@T["Referrer Policy"]</label>
    <select asp-for="ReferrerPolicy" class="form-control">
        <option value="@ReferrerPolicyValue.NoReferrer" selected="@(Model.ReferrerPolicy == ReferrerPolicyValue.NoReferrer)">
            @T["No referrer"]
        </option>
        <option value="@ReferrerPolicyValue.NoReferrerWhenDowngrade" selected="@(Model.ReferrerPolicy == ReferrerPolicyValue.NoReferrerWhenDowngrade)">
            @T["No referrer when downgrade"]
        </option>
        <option value="@ReferrerPolicyValue.Origin" selected="@(Model.ReferrerPolicy == ReferrerPolicyValue.Origin)">
            @T["Origin"]
        </option>
        <option value="@ReferrerPolicyValue.OriginWhenCrossOrigin" selected="@(Model.ReferrerPolicy == ReferrerPolicyValue.OriginWhenCrossOrigin)">
            @T["Origin when cross origin"]
        </option>
        <option value="@ReferrerPolicyValue.SameOrigin" selected="@(Model.ReferrerPolicy == ReferrerPolicyValue.SameOrigin)">
            @T["Same origin"]
        </option>
        <option value="@ReferrerPolicyValue.StrictOrigin" selected="@(Model.ReferrerPolicy == ReferrerPolicyValue.StrictOrigin)">
            @T["Strict origin"]
        </option>
        <option value="@ReferrerPolicyValue.StrictOriginWhenCrossOrigin" selected="@(Model.ReferrerPolicy == ReferrerPolicyValue.StrictOriginWhenCrossOrigin)">
            @T["Strict origin when cross origin"]
        </option>
        <option value="@ReferrerPolicyValue.UnsafeUrl" selected="@(Model.ReferrerPolicy == ReferrerPolicyValue.UnsafeUrl)">
            @T["Unsafe URL"]
        </option>
    </select>
    <span asp-validation-for="ReferrerPolicy"></span>
    <span class="hint">@T["Allows a site to control how much information the browser includes with navigations away from a document and should be set by all sites."]</span>
</div>
<div class="form-group" asp-validation-class-for="StrictTransportSecurityMaxAge">
    <label asp-for="StrictTransportSecurityMaxAge">@T["Strict Transport Security - Max Age"]</label>
    <input asp-for="StrictTransportSecurityMaxAge" class="form-control" type="number" />
    <span asp-validation-for="StrictTransportSecurityMaxAge"></span>
    <span class="hint">@T["The max age of the HSTS header (in days)."]</span>
</div>
<div class="form-group" asp-validation-class-for="StrictTransportSecurityIncludeSubDomains">
    <div class="custom-control custom-checkbox">
        <input type="checkbox" class="custom-control-input" asp-for="StrictTransportSecurityIncludeSubDomains" />
        <label class="custom-control-label" asp-for="StrictTransportSecurityIncludeSubDomains">@T["Strict Transpor Security - Include Subdomains"]</label>
    </div>
</div>
<div class="form-group" asp-validation-class-for="StrictTransportSecurityPreload">
    <div class="custom-control custom-checkbox">
        <input type="checkbox" class="custom-control-input" asp-for="StrictTransportSecurityPreload" />
        <label class="custom-control-label" asp-for="StrictTransportSecurityPreload">@T["Strict Transport Security - Preload"]</label>
    </div>
</div>
