@model RewriteRulesViewModel

<zone Name="Title"><h1>@RenderTitleSegments(T["URL Rewriting"])</h1></zone>

<div class="alert alert-warning" style="position: sticky; bottom: 0">
    <form>
        <p>@T["The website needs to be restarted for any changes to the rules to take effect."]</p>
        <a asp-action="ReloadWebsite" data-url-af="UnsafeUrl RemoveUrl" data-title="@T["Restart Website"]" data-message="@T["Are you sure you want to restart website?"]" class="btn btn-warning">@T["Restart Website"]</a>
    </form>
</div>

<div class="card mb-3 text-bg-theme position-sticky action-bar">
    <div class="card-body">
        <div class="row gx-3">
            <div class="col">
                <div class="has-search">
                    <i class="fa-solid fa-search form-control-feedback" aria-hidden="true"></i>
                    <input id="search-box" class="form-control" placeholder="@T["Search"]" type="search" autofocus />
                </div>
            </div>
            <div class="col-auto">
                <a asp-route-action="CreateRule" id="btnCreate" class="btn btn-secondary create" role="button">@T["Create Rule"]</a>
            </div>
        </div>
    </div>
</div>

<form class="rules">
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Rule name</th>
                <th scope="col">Pattern</th>
                <th scope="col">Subsitution</th>
                <th scope="col">Action</th>
                <th scope="col" class="text-end"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var rule in Model.Rules)
            {
                var message = T["Are you sure you want to delete this rule?"];

                <tr data-filter-value="@rule.Name">
                    <td scope="row">@rule.Name</td>
                    <td><code>@rule.Pattern</code></td>
                    <td><code>@rule.Substitution</code></td>
                    <td>@(rule.RuleAction == RuleAction.Rewrite ? T["Rewrite"] : T["Redirect"])</td>
                    <td class="text-end">
                        <div>
                            <a class="edit btn btn-primary btn-sm" role="button" asp-action="EditRule" asp-route-id="@rule.Name">@T["Edit"]</a>
                            <a class="delete btn btn-danger btn-sm" asp-route-id="@rule.Name" role="button" asp-action="DeleteRule" data-url-af="UnsafeUrl RemoveUrl" data-title="@T["Delete Rule"]" data-message="@message">@T["Delete"]</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div id="list-alert" class="alert alert-info d-none" role="alert">
        @T["<strong>Nothing here!</strong> Your search returned no results."]
    </div>
</form>

<script at="Foot" depends-on="jQuery">
    $(function () {
        var searchBox = $('#search-box');

        // On Enter, edit the rule if there is a single one
        searchBox.keypress(function (event) {
            if (event.which == 13) {

                // Edit the rule if there is a single filtered element
                var visible = $('.rules > table > tr:visible');
                if (visible.length == 1) {
                    window.location = visible.find('.edit').attr('href');
                }
                return false;
            }
        });

        // On each keypress filter the list of rules
        searchBox.keyup(function (e) {
            var search = $(this).val().toLowerCase();
            var elementsToFilter = $("[data-filter-value]");

            // On ESC, clear the search box and display all rules
            if (e.keyCode == 27 || search == '') {
                searchBox.val('');
                elementsToFilter.removeClass("d-none first-child-visible last-child-visible");
                $('#list-alert').addClass("d-none");
            }
            else {
                elementsToFilter.each(function () {
                    var text = $(this).data('filter-value').toLowerCase();
                    var found = text.indexOf(search) > -1;

                    if (found) {
                        $(this).removeClass("d-none first-child-visible last-child-visible");
                    }
                    else {
                        $(this).addClass("d-none");
                    }
                });

                elementsToFilter.filter(":not(.d-none)").first().addClass("first-child-visible");
                elementsToFilter.filter(":not(.d-none)").last().addClass("last-child-visible");

                // We display an alert if a search is not found
                var visible = $('.rules > table > tbody > tr:visible');
                if (visible.length == 0) {
                    $('#list-alert').removeClass("d-none");
                }
                else {
                    $('#list-alert').addClass("d-none");
                }
            }
        });
    })
</script>