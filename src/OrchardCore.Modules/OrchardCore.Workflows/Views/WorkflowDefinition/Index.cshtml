@model WorkflowDefinitionIndexViewModel
@using OrchardCore.Workflows.ViewModels;

<h1>@RenderTitleSegments(T["Manage Workflow Definitions"])</h1>


<nav class="admin-toolbar">
    <ul class="navbar-nav mr-auto">
        <li class="nav-item">
            <a asp-action="EditProperties" asp-route-returnUrl="@Context.Request.Path" asp- class="btn btn-primary" role="button"> @T["Create Workflow Definition"]</a>
            <div class="btn-group" role="group">
                <button id="bulk-actions-button" type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @T["Bulk Actions"]
                </button>
                <div class="dropdown-menu" aria-labelledby="bulk-actions-button">
                    <button type="submit" name="BulkAction" value="@WorkflowDefinitionBulkAction.Delete" form="workflow-definitions-form" class="dropdown-item"> @T["Delete"]</a>
                </div>
            </div>
        </li>
    </ul>
    <form asp-action="Index" method="get" class="form-inline">
        <input id="search-box" asp-for="Options.Search" class="form-control mr-sm-2" type="text" placeholder="@T["Search"]" autofocus="autofocus">
        <button type="submit" class="btn btn-secondary my-2 my-sm-0">@T["Search"]</button>
    </form>
</nav>

@if (Model.WorkflowDefinitions.Any())
{
    using (Html.BeginForm(FormMethod.Post, new { id = "workflow-definitions-form" }))
    {
        <ul class="list-group">
            @for (var i = 0; i < Model.WorkflowDefinitions.Count; i++)
            {
                var entry = Model.WorkflowDefinitions[i];
                <li class="list-group-item">
                    <div class="properties">
                        <div class="related">
                            <a asp-action="Edit" asp-route-id="@entry.WorkflowDefinition.Id" class="btn btn-primary btn-sm">@T["Edit"]</a>
                            <a asp-action="EditProperties" asp-route-id="@entry.WorkflowDefinition.Id" asp-route-returnUrl="@Context.Request.Path" class="btn btn-primary btn-sm">@T["Properties"]</a>
                            <a asp-action="Delete" asp-route-id="@entry.WorkflowDefinition.Id" class="btn btn-danger btn-sm" itemprop="RemoveUrl UnsafeUrl">@T["Delete"]</a>
                        </div>

                        <input type="checkbox" asp-for="@Model.WorkflowDefinitions[i].IsChecked" />
                        <input type="hidden" asp-for="@Model.WorkflowDefinitions[i].Id" />
                        <input type="hidden" asp-for="@Model.WorkflowDefinitions[i].Name" />
                        <a asp-action="Edit" asp-route-id="@entry.WorkflowDefinition.Id">@entry.Name</a>

                        <div class="metadata">
                            @if (!entry.WorkflowDefinition.IsEnabled)
                            {
                                <span class="badge badge-secondary">@T["disabled"]</span>
                            }
                            @if (entry.WorkflowInstanceCount > 0)
                            {
                                <a asp-action="Index" asp-controller="WorkflowInstance" asp-route-workflowDefinitionId="@entry.WorkflowDefinition.Id" class="badge badge-info">@T.Plural(entry.WorkflowInstanceCount, "1 instance", "{0} instances", entry.WorkflowInstanceCount)</a>
                            }
                        </div>
                    </div>
                </li>
            }
        </ul>
    }

    @await DisplayAsync(Model.Pager)
}
else
{
    <div class="alert alert-info" role="alert">
        @T["<strong>Nothing here!</strong> There are no workflow definitions at the moment."]
    </div>
}