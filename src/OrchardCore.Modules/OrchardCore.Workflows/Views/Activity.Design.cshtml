@using OrchardCore.Workflows.Models
@using OrchardCore.Workflows.Services
@{
    var activityRecord = (ActivityRecord)Model.ActivityRecord;
    var activity = (IActivity)Model.Activity;
    var activityEvent = activity as IEvent;
    var canStart = activityEvent?.CanStartWorkflow ?? false;
    var isStart = canStart && activityRecord.IsStart;
    var cssClass = isStart ? "activity-start" : "";
}
<div class="activity @cssClass" style="left:@(activityRecord.X)px; top:@(activityRecord.Y)px;" id="@($"activity-{Model.WorkflowDefinitionId}-{activityRecord.Id}")" data-activity-id="@activityRecord.Id" data-activity-start="@isStart.ToString().ToLower()" data-placement="bottom">
    @await DisplayAsync(Model.Content)

    <div class="activity-commands">
        @if (canStart)
        {
            <a class="btn btn-outline-secondary activity-start-action" href="#" data-toggle="button"><i class="fa fa-power-off"></i></a>
        }
        <a class="btn btn-primary activity-edit-action" asp-action="Edit" asp-controller="Activity" asp-route-workflowdefinitionid="@Model.WorkflowDefinitionId" asp-route-activityid="@activityRecord.Id"><i class="fa fa-pencil"></i></a>
        <a class="btn btn-danger activity-delete-action" href="#"><i class="fa fa-trash"></i></a>
    </div>
</div>