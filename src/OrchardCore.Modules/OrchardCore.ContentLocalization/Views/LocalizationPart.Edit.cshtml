@using System.Globalization
@using OrchardCore.Settings
@model LocalizationPartViewModel
@inject ISiteService SiteService

@{
    var siteSettings = await SiteService.GetSiteSettingsAsync();
}

@if (!Model.ContentItemCultures.Any())
{
    <p class="alert alert-warning">@T["Seems your site does not have any cultures yet!!, so you add new culture from the "] <a asp-action="Culture" asp-controller="Admin" asp-route-area="OrchardCore.Settings" class="alert-link">@T["settings"]</a> @T["or the content will be localized by default to the system culture <em>{0}</em>.", CultureInfo.InstalledUICulture.Name]</p>
}
else
{
    if (!string.IsNullOrEmpty(Model.LocalizationSet))
    {
        foreach (var culture in siteSettings.SupportedCultures)
        {
            var currentCulture = Model.ContentItemCultures.SingleOrDefault(c => c.Culture.Name == culture);
            if (currentCulture != null)
            {
                if (!string.IsNullOrEmpty(currentCulture.ContentItemId))
                {
                    <a asp-action="Edit" asp-controller="Admin" asp-route-area="OrchardCore.Contents" asp-route-contentItemId="@currentCulture.ContentItemId" asp-route-targetCulture="@culture" title="@currentCulture.Culture.DisplayName" class="badge badge-info"><i class=" fa fa-globe"></i> @culture</a>
                }
                else
                {
                    <a itemprop="UnsafeUrl" asp-action="Localize" asp-controller="Admin" asp-route-area="OrchardCore.ContentLocalization" asp-route-contentItemId="@Model.LocalizationPart.ContentItem.ContentItemId" asp-route-targetCulture="@culture" title="@currentCulture.Culture.DisplayName" class="badge badge-info"><i class=" fa fa-globe"></i> @culture</a>
                }
            }
            else
            {
                <span class="badge badge-info" style="opacity:0.5"><i class=" fa fa-globe"></i> @culture</span>
            }
        }
    }
}