@{
    Layout = null;
    Title.AddSegment(T["Template Preview"]);
}

<style asp-name="bootstrap" use-cdn="true"></style>
<script asp-name="bootstrap" use-cdn="true" at="Foot"></script>
<script asp-src="/OrchardCore.Templates/js.cookie.js" depends-on="jquery" at="Foot"></script>

<resources type="Header" />

<iframe id="irenderingframe" style="visibility:hidden; position:fixed; top:0px; left:0px; bottom:0px; right:0px; width:100%; height:100%; border:none; margin:0; padding:0; overflow:hidden; z-index:999999;">
    Your browser doesn't support iframes
</iframe>

<iframe id="inoflickerframe" style="visibility:hidden; position:fixed; top:0px; left:0px; bottom:0px; right:0px; width:100%; height:100%; border:none; margin:0; padding:0; overflow:hidden; z-index:999999;">
    Your browser doesn't support iframes
</iframe>

<div id="notConnectedWarning" class="alert alert-info alert-dismissible fade show collapse" role="alert" style="position:fixed; height:60px; top:10px;right:40px; display:none; z-index:999999;">
    <button type="button" id="close-warning" class="close" aria-label="Close" style="position: relative; padding: 0 0 0 1rem; margin-top: -0.2rem;">
        <span aria-hidden="true">&times;</span>
    </button>
    <span>@T["Preview Disconnected"] </span>
</div>

<resources type="Footer" />

<div id="setTemplateUrl" style="display:none" data-value="@Url.Action("SetTemplate", "Preview", new { area = "OrchardCore.Templates" })"></div>
<div id="renderPreviewUrl" style="display:none" data-value="@Url.Content("~/")"></div>

<script type="text/javascript">
    var setTemplateUrl = $(document.getElementById('setTemplateUrl')).data('value');
    var renderPreviewUrl = $(document.getElementById('renderPreviewUrl')).data('value');
    var previewEventTimer = null;
    var previewRenderTimer = null;

    $(function () {
        $(window).on('storage', function (ev) {
            if (ev.key == 'OrchardCore.templates:not-connected') {
                $(notConnectedWarning).show();
            }
            else if (ev.key == 'OrchardCore.templates') {
                if (ev.originalEvent.newValue != null) {
                    clearTimeout(previewEventTimer);
                    previewEventTimer = setTimeout(function () { renderPreview(ev.originalEvent.newValue); }, 150);
                    $(notConnectedWarning).hide();
                }
            }
        });

        // override default behaviour of Bootstrap's. We only hide, not remove the alert.
        $('#close-warning').on('click', function () {
            $('#notConnectedWarning').hide();
        });

        var preview = localStorage.getItem('OrchardCore.templates');

        if (preview == null) {
            // notify the editor to render the preview
            localStorage.setItem('OrchardCore.templates:ready', '');
            localStorage.removeItem('OrchardCore.templates:ready');
        }
        else {
            renderPreview(preview);
        }
    });

    var irenderingframe = document.getElementById('irenderingframe');
    var inoflickerframe = document.getElementById('inoflickerframe');
    var notConnectedWarning = document.getElementById('notConnectedWarning');

    irenderingframe.onload = function () {
        var scrollTop = $(inoflickerframe.contentWindow).scrollTop();
        $(irenderingframe.contentWindow).scrollTop(scrollTop);
        irenderingframe.style.visibility = "visible";
        inoflickerframe.style.visibility = "hidden";

        renderPreviewUrl = this.contentWindow.location;
        // the no flicker frame is loaded once to be fully initialized
        if (inoflickerframe.contentWindow.location.href != renderPreviewUrl.href) {
            inoflickerframe.contentWindow.location = renderPreviewUrl;
        }
        else {
            Cookies.remove("orchard:templates");
            inoflickerframe.contentWindow.document.head.innerHTML = this.contentWindow.document.head.innerHTML;
            inoflickerframe.contentWindow.document.body.innerHTML = this.contentWindow.document.body.innerHTML;
        }
    }

    inoflickerframe.onload = function () {
        Cookies.remove("orchard:templates");
    }

    var rendering;

    function renderPreview(value) {

        if (rendering) {
            clearTimeout(previewRenderTimer);
            previewRenderTimer = setTimeout(function () { renderPreview(value); }, 150);
        }

        rendering = true;
        clearTimeout(previewRenderTimer);

        try {
            var formData = JSON.parse(value);
            if (!formData) {
                rendering = false;
                return;
            }

            $.post(setTemplateUrl, formData)
                .done(function () {
                    try {
                        Cookies.set("orchard:templates", true);
                        irenderingframe.contentWindow.location = renderPreviewUrl;
                        var scrollTop = $(irenderingframe.contentWindow).scrollTop();
                        $(inoflickerframe.contentWindow).scrollTop(scrollTop);
                        inoflickerframe.style.visibility = "visible";
                        irenderingframe.style.visibility = "hidden";
                    }
                    catch (e) {
                        console.log('Error while previewing: ' + e);
                    }
                })
                .always(function () {
                    rendering = false;
                });
        }
        catch (e) {
            rendering = false;
            console.log('Error while previewing: ' + e);
        }
    }

</script>