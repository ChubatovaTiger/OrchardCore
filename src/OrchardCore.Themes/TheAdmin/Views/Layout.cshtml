@using OrchardCore.DisplayManagement
@using OrchardCore.DisplayManagement.ModelBinding
@using OrchardCore.Environment.Shell
@using OrchardCore.Themes.Services
@using OrchardCore.Users.Models

@inject ThemeTogglerService ThemeTogglerService
@inject IDisplayManager<UserMenu> DisplayManager
@inject IUpdateModelAccessor UpdateModelAccessor
@{
    var adminSettings = Site.As<AdminSettings>();

    // Branding is pre-rendered to allow resource injection
    var brandingHtml = await DisplayAsync(await New.AdminBranding());
}
<!DOCTYPE html>
<html lang="@Orchard.CultureName()" dir="@Orchard.CultureDir()" data-bs-theme="@await ThemeTogglerService.CurrentTheme()" data-tenant="@ThemeTogglerService.CurrentTenant">
<head>
    <title>@RenderTitleSegments(Site.SiteName, "before")</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="x-ua-compatible" content="ie=edge">

    <!-- This script can't wait till the footer -->
    <script asp-name="admin-head" version="1" at="Head"></script>

    <!-- TheAdmin && Bootstrap CSS -->
    <style media="all" asp-name="admin" version="1"></style>
    <script asp-name="font-awesome" at="Head" version="6"></script>
    <script asp-name="admin" version="1" at="Foot"></script>
    <resources type="Header" />

    @await RenderSectionAsync("HeadMeta", required: false)
</head>
<body class="preload">
    <div class="ta-wrapper">
        <nav class="ta-navbar-top navbar text-bg-theme fixed-top">
            <div class="container-fluid">
                <div class="d-flex w-100 justify-content-between align-items-center">
                    <div class="brand-wrapper">
                        <div class="d-flex w-100 justify-content-between align-items-center">
                            @brandingHtml

                            @if (adminSettings.DisplayTitlesInTopbar)
                            {
                                <div class="brand-wrapper-title">
                                    @await RenderSectionAsync("Title", required: false)
                                </div>
                            }
                        </div>
                    </div>
                    <ul class="navbar-nav user-top-navbar ms-auto d-flex flex-row">
                        @await RenderSectionAsync("NavbarTop", required: false)
                        @if (adminSettings.DisplayThemeToggler)
                        {
                            <li class="nav-item">
                                <div class="dropdown">
                                    <button class="btn btn-link nav-link dropdown-toggle d-flex align-items-center" id="bd-theme" type="button" aria-expanded="false" data-bs-toggle="dropdown" data-bs-display="static" aria-label="@T["Toggle theme"]">
                                        <span class="theme-icon-active"><i class="fa-solid fa-circle-half-stroke"></i></span>
                                        <span class="d-none" id="bd-theme-text">@T["Toggle theme"]</span>
                                    </button>
                                    <ul class="dropdown-menu dropdown-menu-end position-absolute" aria-labelledby="bd-theme-text">
                                        <li>
                                            <button type="button" class="dropdown-item d-flex align-items-center" data-bs-theme-value="auto" aria-pressed="false">
                                                <span class="theme-icon">
                                                    <i class="fa-solid fa-circle-half-stroke"></i>
                                                </span>
                                                <span class="ps-2">@T["Auto"]</span>
                                            </button>
                                        </li>
                                        <li>
                                            <button type="button" class="dropdown-item d-flex align-items-center active" data-bs-theme-value="light" aria-pressed="true">
                                                <span class="theme-icon">
                                                    <i class="fa-solid fa-sun"></i>
                                                </span>
                                                <span class="ps-2">@T["Light"]</span>
                                            </button>
                                        </li>
                                        <li>
                                            <button type="button" class="dropdown-item d-flex align-items-center" data-bs-theme-value="dark" aria-pressed="false">
                                                <span class="theme-icon">
                                                    <i class="fa-solid fa-moon"></i>
                                                </span>
                                                <span class="ps-2">@T["Dark"]</span>
                                            </button>
                                        </li>
                                        @await RenderSectionAsync("ToggleThemeItems", required: false)
                                    </ul>
                                </div>
                            </li>
                        }
                        <li class="nav-item">
                            <a href="@Url.Content("~/")" class="nav-link" target="_blank" data-bs-toggle="tooltip" data-bs-placement="bottom" title="@T["Visit Site"]" role="button">
                                <i class="fa-solid fa-fw fa-external-link" aria-hidden="true"></i>
                            </a>
                        </li>
                        <li class="nav-item">
                            @await DisplayAsync(await DisplayManager.BuildDisplayAsync(new UserMenu(), UpdateModelAccessor.ModelUpdater, "DetailAdmin"))
                        </li>
                    </ul>
                </div>
            </div>
        </nav>

        <div id="ta-left-sidebar" class="d-flex flex-column justify-content-between align-items-stretch">
            @await RenderSectionAsync("Navigation", required: false)
            <div class="footer">
                <button type="button" class="leftbar-compactor" title="@T["Collapse / expand menu"]">
                    <span class="d-none">@T["Collapse / expand menu"]</span>
                </button>
            </div>
        </div>

        <div class="ta-content">
            @await RenderSectionAsync("Header", required: false)
            @await RenderSectionAsync("Messages", required: false)
            @await RenderSectionAsync("Breadcrumbs", required: false)
            @if (!adminSettings.DisplayTitlesInTopbar)
            {
                @await RenderSectionAsync("Title", required: false)
            }
            @await RenderBodyAsync()
        </div>

        @await RenderSectionAsync("Footer", required: false)

    </div>
    <div id="confirmRemoveModalMetadata" data-title="@T["Delete"]" data-message="@T["Are you sure you want to remove this element?"]" data-ok-text="@T["Ok"]" data-cancel-text="@T["Cancel"]" data-ok-class="btn-danger" data-cancel-class="btn-secondary"></div>
    <resources type="Footer" />
</body>
</html>
