<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OrchardCore.Redis</name>
    </assembly>
    <members>
        <member name="T:OrchardCore.Redis.Services.RedisLock">
            <summary>
            This component is a tenant singleton which allows to acquire distributed named locks for a given tenant.
            </summary>
        </member>
        <member name="M:OrchardCore.Redis.Services.RedisLock.AcquireLockAsync(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Waits indefinitely until acquiring a named lock with a given expiration for the current tenant.
            After 'expiration' the lock is auto released, a null value is equivalent to 'TimeSpan.MaxValue'.
            </summary>
        </member>
        <member name="M:OrchardCore.Redis.Services.RedisLock.TryAcquireLockAsync(System.String,System.TimeSpan,System.Nullable{System.TimeSpan})">
            <summary>
            Tries to acquire a named lock in a given timeout with a given expiration for the current tenant.
            After 'expiration' the lock is auto released, a null value is equivalent to 'TimeSpan.MaxValue'.
            </summary>
        </member>
    </members>
</doc>
