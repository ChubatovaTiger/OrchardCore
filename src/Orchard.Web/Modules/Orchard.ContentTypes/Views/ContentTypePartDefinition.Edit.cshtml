@using Orchard.ContentManagement.MetaData.Models;
@using Orchard.ContentManagement.Metadata.Settings;
@using Orchard.ContentTypes.ViewModels;

@{
    ContentTypePartDefinition contentTypePartDefinition = Model.ContentPart;
}


<fieldset class="form-group">
<h3>@contentTypePartDefinition.PartDefinition.Name</h3>

@Display(Model.Content)

@if (contentTypePartDefinition.Settings.ToObject<ContentPartSettings>().Attachable)
{
    <a asp-route-action="RemovePartFrom" asp-route-id="@contentTypePartDefinition.ContentTypeDefinition.Name" asp-route-name="@contentTypePartDefinition.PartDefinition.Name" itemprop="RemoveUrl UnsafeUrl">@T["Remove"]</a>
}

</fieldset>

@*

<h3>
    @Model.PartDefinition.DisplayName
    @if (!string.IsNullOrWhiteSpace(Model.Description))
    {
        <span class="description"> - @Model.Description</span>
    }@
</h3>

@if (Model.PartDefinition.Settings.ToObject<ContentPartSettings>().Attachable)
{
    <a asp-route-action="RemovePartFrom" asp-route-id="@Model.Type.Name" asp-route-name="@Model.Type.Name" itemprop="RemoveUrl UnsafeUrl">@T["Remove"]</a>
}

<fieldset class="form-group">
    @Html.EditorFor(m => m.PartDefinition.Fields, "TypePartFields", "PartDefinition")
    @if (Model.Templates.Any())
    {
        <div class="settings">
            <h4>@T["{0} Settings:", Model.PartDefinition.DisplayName]</h4>
            @{ 
                // await Html.RenderTemplatesAsync(Model.Templates); 
            }
        </div>
                }
                <input asp-for="PartDefinition.Name" type="hidden" />
                <input asp-for="Index" type="hidden" />
            </fieldset>
            
*@