image:
- Ubuntu
# - Visual Studio 2017

environment:
  global:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    DOTNET_CLI_TELEMETRY_OPTOUT: 1
    DOCKER_USER:
      secure: 2a9QfyDw5J1NDZD80kMwhQ==
    DOCKER_PASS:
      secure: aLjaywnziVFcRa3uZ8iMteFDjA1wp0fSaPMaBE55LO4=
    MYGET_API_KEY:
        secure: 8Fp2ETunhU6PvhlotuQXTZ7WkG1FikJ3BM7YLAZyfmbpy00knABu5yL7MhJ9uNcl
    NUGET_API_KEY:
        secure: bR0JuO8NuLOxL18tQ7ZtQXOHNHjqCJXlkUOzEyNQniptTszwYcwufYhKTyoybqei

stack: node 9, docker

# Install scripts. (runs after repo cloning)
install:

  # Set the BuildNumber property used in OrchardCore.Commons.props
  - ps: $env:BuildNumber= $env:APPVEYOR_BUILD_NUMBER

  - ps: $IsMasterBranch = ($env:APPVEYOR_REPO_BRANCH -eq "master" -And -not $env:APPVEYOR_PULL_REQUEST_NUMBER)
  - ps: $IsDevBranch = ($env:APPVEYOR_REPO_BRANCH -eq "dev" -And -not $env:APPVEYOR_PULL_REQUEST_NUMBER)

init:
  - git config --global core.autocrlf true

build_script:
  - dotnet --version

  # Build Nuget packages and publish app for Docker
  - ps: |
  
      if (($IsMasterBranch -eq $true) -or ($IsDevBranch -eq $true)) 
      { 
        dotnet publish -c Release -p $env:APPVEYOR_BUILD_FOLDER/src/OrchardCore.Cms.Web/OrchardCore.Cms.Web.csproj -o $env:APPVEYOR_BUILD_FOLDER/.build/release
        dotnet pack -c Release 
      }

  # Building Docker images
  - ps: cd $env:APPVEYOR_BUILD_FOLDER
  - ps: docker login -u="$env:DOCKER_USER" -p="$env:DOCKER_PASS"
  - ps: |

      if (($IsMasterBranch -eq $true) -and ($isWindows))
      {
        docker build -t orchardproject/orchardcore-cms-windows:latest -t orchardproject/orchardcore-cms-windows:1.0.0-beta2 .
        docker push orchardproject/orchardcore-cms-windows
      }

      if (($IsDevBranch -eq $true) -and ($isWindows))
      {
        docker build -t orchardproject/orchardcore-cms-windows:dev .
        docker push orchardproject/orchardcore-cms-windows
      }

      if (($IsMasterBranch -eq $true) -and ($isLinux))
      {
        docker build -t orchardproject/orchardcore-cms-linux:latest -t orchardproject/orchardcore-cms-linux:1.0.0-beta2 .
        docker push orchardproject/orchardcore-cms-linux
      }

      if (($IsDevBranch -eq $true) -and ($isLinux))
      {
        docker build -t orchardproject/orchardcore-cms-linux:dev .
        docker push orchardproject/orchardcore-cms-linux
      }

test_script:
  - dotnet --version
  - node --version
  - npm --version
  - dotnet test -c Release ./test/OrchardCore.Tests/OrchardCore.Tests.csproj
  - cd ./test/Functional
  - ps: .\test-setup.ps1
  - ps: .\test-run.ps1

clone_depth: 1
test: on

artifacts:
- path: 'src/**/*.nupkg'

deploy_script:
- ps:  if (($IsMasterBranch -eq $true) -and ($isWindows)) { foreach ($artifactName in $artifacts.keys) { nuget push $artifacts[$artifactName].path $env:NUGET_API_KEY -Source https://www.nuget.org/api/v2/package } }
- ps:  if (($IsDevBranch -eq $true) -and ($isWindows)) { foreach ($artifactName in $artifacts.keys) { nuget push $artifacts[$artifactName].path $env:MYGET_API_KEY -Source https://www.myget.org/F/orchardcore-preview/api/v2/package } }
